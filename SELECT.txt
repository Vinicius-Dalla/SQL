-- ORDER BY
SELECT * FROM cursos ORDER BY nome ASC;
SELECT * FROM cursos ORDER BY nome DESC;

SELECT nome, carga, ano FROM cursos ORDER BY nome;
SELECT nome, carga, ano FROM cursos ORDER BY ano, nome;

SELECT * FROM cursos WHERE ano = '2016' ORDER BY nome;
SELECT nome, descricao, carga FROM cursos WHERE ano = '2016' ORDER BY nome;
SELECT nome, descricao, ano FROM cursos WHERE ano <= 2015 ORDER BY ano, nome;
SELECT nome, descricao, ano FROM cursos WHERE ano <> 2015 ORDER BY ano, nome;

SELECT * FROM cursos WHERE ano BETWEEN 2014 AND 2016 ORDER BY ano DESC, nome ASC;
SELECT nome, descricao, ano FROM cursos WHERE ano IN (2014, 2016) ORDER BY ano;

SELECT * FROM cursos WHERE carga > 35 AND totaulas < 30;
SELECT * FROM cursos WHERE carga > 35 OR totaulas < 30;

-- LIKE
SELECT * FROM cursos WHERE nome LIKE 'P%';
SELECT * FROM cursos WHERE nome LIKE '%A';
SELECT * FROM cursos WHERE nome LIKE '%A%';
SELECT * FROM cursos WHERE nome NOT LIKE '%A%';
SELECT * FROM cursos WHERE nome LIKE 'ph%p%';

-- DISTINCT
SELECT DISTINCT nacionalidade FROM gafanhotos ORDER BY nacionalidade;

-- FUNÇÕES DE AGREGAÇÃO
SELECT COUNT(nome) FROM cursos;
SELECT COUNT(*) FROM cursos WHERE carga > 40;
SELECT MAX(carga) FROM cursos;
SELECT MAX(totaulas) FROM cursos WHERE ano = '2016';
SELECT MIN(totaulas) FROM cursos WHERE ano = '2016';
SELECT SUM(totaulas) FROM cursos;
SELECT SUM(totaulas) FROM cursos WHERE ano = '2016';
SELECT AVG(totaulas) FROM cursos;
SELECT AVG(totaulas) FROM cursos WHERE ano = '2016';

-- GROUP BY E HAVING
SELECT carga FROM cursos GROUP BY carga;
SELECT carga, COUNT(nome) FROM cursos GROUP BY carga;
SELECT ano, COUNT(*) FROM cursos GROUP BY ano HAVING COUNT(ano) >= 5 ORDER BY COUNT(*) DESC;
SELECT carga, COUNT(*) FROM cursos WHERE ano > 2015 GROUP BY carga HAVING carga > (SELECT AVG(carga) FROM cursos);

-- Exercícios de SELECT
SELECT * FROM gafanhotos WHERE nascimento BETWEEN '2000-01-01' AND '2015-12-31';
SELECT * FROM gafanhotos WHERE sexo = 'M' AND profissao = 'Programador';
SELECT * FROM gafanhotos WHERE sexo = 'F' AND nacionalidade = 'Brasil' AND nome LIKE 'J%';
SELECT nome, nacionalidade FROM gafanhotos WHERE sexo = 'M' AND nome LIKE '%Silva%' AND nacionalidade <> 'Brasil' AND peso < 100;
SELECT MAX(altura) FROM gafanhotos WHERE sexo = 'M' AND nacionalidade = 'Brasil';
SELECT AVG(peso) FROM gafanhotos;
SELECT MIN(peso) FROM gafanhotos WHERE sexo = 'F' AND nacionalidade <> 'Brasil' AND nascimento BETWEEN '1990-01-01' AND '2000-12-31';
SELECT * FROM gafanhotos WHERE sexo = 'F' AND altura > 1.90;
SELECT profissao, COUNT(*) FROM gafanhotos GROUP BY profissao;

SELECT sexo, COUNT(*) FROM gafanhotos WHERE nascimento > '2005-01-01' GROUP BY sexo;
SELECT nacionalidade, COUNT(*) FROM gafanhotos WHERE nacionalidade <> 'Brasil' GROUP BY nacionalidade HAVING COUNT(*) > 3;

SELECT altura, COUNT(*) FROM gafanhotos WHERE peso > 100 GROUP BY altura HAVING altura > (SELECT AVG(altura) FROM gafanhotos);

SELECT gafanhotos.nome, gafanhotos.cursopreferido, cursos.nome, cursos.ano FROM gafanhotos JOIN cursos;

SELECT gafanhotos.nome, cursos.nome, cursos.ano FROM gafanhotos JOIN cursos ON cursos.idcurso = gafanhotos.cursopreferido;

SELECT gafanhotos.nome, cursos.nome, cursos.ano FROM gafanhotos INNER JOIN cursos ON cursos.idcurso = gafanhotos.cursopreferido ORDER BY gafanhotos.nome;

SELECT g.nome, c.nome, c.ano FROM gafanhotos AS g INNER JOIN cursos AS c ON c.idcurso = g.cursopreferido ORDER BY g.nome;

SELECT g.nome, c.nome, c.ano FROM gafanhotos AS g LEFT JOIN cursos AS c ON c.idcurso = g.cursopreferido;

SELECT g.nome, c.nome, c.ano FROM gafanhotos AS g RIGHT JOIN cursos AS c ON c.idcurso = g.cursopreferido;
