ORDER BY
select * from cursos order by nome asc; 
select * from cursos order by nome desc; 

select nome, carga, ano from cursos order by nome;
select nome, carga, ano from cursos order by ano, nome;

select * from cursos where ano = '2016' order by nome;
select nome, descricao, carga from cursos where ano = '2016' order by nome;
select nome, descricao, ano from cursos where ano <= 2015 order by ano, nome;
select nome, descricao, ano from cursos where ano <> 2015 order by ano, nome;

select * from cursos where ano between 2014 and 2016 order by ano desc, nome asc;
select nome, descricao, ano from cursos where ano in (2014,2016) order by ano;

select * from cursos where carga > 35 and totaulas < 30;
select * from cursos where carga > 35 or totaulas < 30;

LIKE
select * from cursos where nome like 'P%';
select * from cursos where nome like '%A';
select * from cursos where nome like '%A%';
select * from cursos where nome not like '%A%';
select * from cursos where nome like 'ph%p%';

DISTINCT
select distinct nacionalidade from gafanhotos order by nacionalidade;

FUNÇÕES DE AGREGAÇÕES
select count(nome) from cursos;
select count(*) from cursos where carga > 40;
select max(carga) from cursos;
select max(totaulas) from cursos where ano = '2016';
select min(totaulas) from cursos where ano = '2016';
select sum(totaulas) from cursos;
select sum(totaulas) from cursos where ano = '2016';
select avg(totaulas) from cursos;
select avg(totaulas) from cursos cursos where ano = '2016';

GROUP BY E HAVING
select carga from cursos group by carga;
select carga, count(nome) from cursos group by carga;
select ano, count(*) from cursos group by ano having count(ano) >=5 order by count(*) desc;
select carga, count(*) from cursos where ano > 2015 group by carga having carga > (select avg(carga) from cursos)

Exercícios de SELECT
select * from gafanhotos where nascimento between '2000-01-01' and '2015-12-31';
select * from gafanhotos where sexo = 'M' and profissao = 'Programador';
select * from gafanhotos where sexo = 'F' and nacionalidade = 'Brasil' and nome like 'J%';
select nome, nacionalidade from gafanhotos 
where sexo = 'M' and nome like '%Silva%' and nacionalidade <> 'Brasil' and peso < 100;
select max(altura) from gafanhotos where sexo = 'M' and nacionalidade = 'Brasil';
select avg(peso) from gafanhotos;
select min(peso) from gafanhotos where sexo = 'F' and nacionalidade <> 'Brasil' and nascimento between '1990-01-01' and '2000-12-31';
select * from gafanhotos where sexo = 'F' and altura > '1.90';
select profissao, count(*) from gafanhotos group by profissao;

select sexo, count(*) from gafanhotos where nascimento > '2005-01-01' group by sexo ;
select nacionalidade, count(*) from gafanhotos 
where nacionalidade <> 'Brasil' 
group by nacionalidade 
having count(*) > '3';

select altura, count(*) from gafanhotos 
where peso > '100' 
group by altura 
having altura > (select avg(altura) from gafanhotos);

select gafanhotos.nome, gafanhotos.cursopreferido, cursos.nome, cursos.ano 
from gafanhotos join cursos;

select gafanhotos.nome, cursos.nome, cursos.ano 
from gafanhotos join cursos on cursos.idcurso = gafanhotos.cursopreferido;

select gafanhotos.nome, cursos.nome, cursos.ano 
from gafanhotos inner join cursos on cursos.idcurso = gafanhotos.cursopreferido
order by gafanhotos.nome;

select g.nome, c.nome, c.ano 
from gafanhotos as g inner join cursos as c 
on c.idcurso = g.cursopreferido
order by g.nome;

select g.nome, c.nome, c.ano 
from gafanhotos as g left join cursos as c 
on c.idcurso = g.cursopreferido;

select g.nome, c.nome, c.ano 
from gafanhotos as g right join cursos as c 
on c.idcurso = g.cursopreferido;


